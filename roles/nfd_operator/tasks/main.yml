---
- name: Ensure NFD namespace exists
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ nfd.namespace }}"

- name: Ensure OperatorGroup for NFD
  kubernetes.core.k8s:
    state: present
    definition: |
      apiVersion: operators.coreos.com/v1
      kind: OperatorGroup
      metadata:
        name: "{{ nfd.operatorgroup_name }}"
        namespace: "{{ nfd.namespace }}"
      spec:
        targetNamespaces:
          - "{{ nfd.namespace }}"

- name: Install NFD via Subscription
  kubernetes.core.k8s:
    state: present
    definition: |
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: "{{ nfd.package }}"
        namespace: "{{ nfd.namespace }}"
      spec:
        channel: "{{ nfd.channel }}"
        installPlanApproval: Automatic
        name: "{{ nfd.package }}"
        source: "{{ nfd.source }}"
        sourceNamespace: "{{ nfd.source_namespace }}"

- name: Wait for NFD CRD to be established
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: nodefeaturediscoveries.nfd.openshift.io
  register: nfd_crd
  retries: 60
  delay: 10
  until: nfd_crd.resources | length > 0

- name: Create a default NodeFeatureDiscovery instance
  kubernetes.core.k8s:
    state: present
    definition: |
      apiVersion: nfd.openshift.io/v1
      kind: NodeFeatureDiscovery
      metadata:
        name: nfd-instance
        namespace: "{{ nfd.namespace }}"
      spec:
        workerConfig:
          configData: |
            core:
              labelWhiteList: ".*"
            sources:
              pci:
                deviceClassWhitelist: ["03", "02"]
                deviceLabelFields: ["class", "vendor", "device", "subsystem_vendor", "subsystem_device"]
            rules:
              - name: "nvidia-gpu"
                labels:
                  "pci-10de.present": "true"
                matchFeatures:
                  - feature: pci.device
                    matchExpressions:
                      vendor: {op: In, value: ["10de"]}
